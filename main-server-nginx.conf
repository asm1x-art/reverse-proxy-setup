# Список разрешенных IP реверс-прокси
geo $allowed_proxy {
    default 0;
    45.77.140.156 1;
}

# Upstream для API (может быть разный для разных сред)
upstream api_production {
    server 127.0.0.1:4000;
    keepalive 32;
}

upstream api_dev {
    server 127.0.0.1:4001;
    keepalive 32;
}

upstream api_test {
    server 127.0.0.1:4002;
    keepalive 32;
}

# Дефолтный сервер - отклоняем всё неизвестное
server {
    listen 80 default_server;
    server_name _;
    
    access_log /var/log/nginx/denied.access.log;
    error_log  /var/log/nginx/denied.error.log warn;
    
    return 444;
}

# Основной сервер для astrum.ac
server {
    listen 80;
    server_name astrum.ac *.astrum.ac;

    # Блокируем всех кроме разрешенных прокси
    if ($allowed_proxy = 0) {
        access_log /var/log/nginx/blocked.access.log;
        return 403;
    }

    # Логи
    access_log /var/log/nginx/main.access.log;
    error_log  /var/log/nginx/main.error.log warn;

    # Получаем реальный IP от прокси
    real_ip_header X-Forwarded-For;
    set_real_ip_from 45.77.140.156;  # IP твоего прокси

    # Определяем среду по поддомену
    set $environment "production";
    set $static_root "/var/www/astrum/production";
    
    if ($host ~ ^dev\.astrum\.ac$) {
        set $environment "dev";
        set $static_root "/var/www/astrum/dev";
    }
    if ($host ~ ^test\.astrum\.ac$) {
        set $environment "test";
        set $static_root "/var/www/astrum/test";
    }

    # API endpoints - проксируем на бэкенд
    location /api/ {
        # Выбираем нужный API upstream
        if ($environment = "production") {
            proxy_pass http://api_production;
        }
        if ($environment = "dev") {
            proxy_pass http://api_dev;
        }
        if ($environment = "test") {
            proxy_pass http://api_test;
        }
        
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment     $environment;
        
        # CORS заголовки
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        
        if ($request_method = OPTIONS) {
            return 204;
        }
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Admin и Support приложение - статика из admin билда
    location ~ ^/(admin|support)/ {
        root $static_root;
        try_files $uri $uri/ /admin/index.html;
        
        # Кеширование статики
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root $static_root;
            expires 1M;
            add_header Cache-Control "public, immutable";
        }
        
        # Для SPA - все неизвестные пути отдаем index.html
        location ~ ^/(admin|support)/.*$ {
            root $static_root;
            try_files $uri /admin/index.html;
        }
    }

    # User, Team-lead, Merchant приложение - статика из user билда
    location ~ ^/(user|team-lead|merchant)/ {
        root $static_root;
        try_files $uri $uri/ /user/index.html;
        
        # Кеширование статики
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root $static_root;
            expires 1M;
            add_header Cache-Control "public, immutable";
        }
        
        # Для SPA - все неизвестные пути отдаем index.html
        location ~ ^/(user|team-lead|merchant)/.*$ {
            root $static_root;
            try_files $uri /user/index.html;
        }
    }

    # Все остальное - 404
    location / {
        return 404;
    }
}